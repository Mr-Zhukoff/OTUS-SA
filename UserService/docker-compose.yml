services:
  userserviceapi:
    container_name: userserviceapi
    hostname: userserviceapi
    image: ${DOCKER_REGISTRY-}userserviceapi
    build:
      context: .
      dockerfile: UserServiceAPI/Dockerfile
    ports:
        - "8080:8080"
    depends_on:
        prometheus:
            condition: service_healthy
        grafana:
            condition: service_healthy
        postgres:
            condition: service_started

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=12345678
    ports:
      - "5432:5432"
    volumes:
     - db:/var/lib/postgresql/data

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: wget -q --tries=1 -O- http://localhost:3000/
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.24
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.17.24
    container_name: logstash
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5000:5000"
      - "9600:9600"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.24
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

volumes:
  db: 
  esdata:
    driver: local

networks:
  elk:
    driver: bridge