services:
  userserviceapi:
    container_name: userserviceapi
    hostname: userserviceapi
    image: ${DOCKER_REGISTRY-}userserviceapi
    build:
      context: .
      dockerfile: UserServiceAPI/Dockerfile
    ports:
        - "8080:8080"
    depends_on:
        prometheus:
            condition: service_healthy
        grafana:
            condition: service_healthy
        postgres:
            condition: service_started

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=pguser
      - POSTGRES_PASSWORD=12345678
    ports:
      - "5432:5432"
    volumes:
     - db:/var/lib/postgresql/data

  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
        prometheus:
            condition: service_healthy
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:3000/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    healthcheck:
        test: wget -q --tries=1 -O- http://localhost:9090/
        interval: 3s
        timeout: 3s
        retries: 10
        start_period: 10s

volumes:
  db: 