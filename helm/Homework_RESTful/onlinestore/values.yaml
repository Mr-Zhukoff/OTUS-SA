userservice:
  replicaCount: 1

  strategy:
    type: Recreate

  restartPolicy: Always

  image:
    repository: zhukoffg/usersservice:1.4
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

billingservice:
  replicaCount: 1

  strategy:
    type: Recreate

  restartPolicy: Always

  image:
    repository: zhukoffg/billingservice:1.0
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

ordersservice:
  replicaCount: 1

  strategy:
    type: Recreate

  restartPolicy: Always

  image:
    repository: zhukoffg/ordersservice:1.2
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http
 
notificationsservice:
  replicaCount: 1

  strategy:
    type: Recreate

  restartPolicy: Always

  image:
    repository: zhukoffg/notificationsservice:1.1
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    targetPort: 8080

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

ingress:
  enabled: true
  className: "nginx"
  annotations: {
      #kubernetes.io/ingress.class: nginx,
      nginx.ingress.kubernetes.io/ssl-redirect: "false",
      nginx.ingress.kubernetes.io/use-regex: "true",
      nginx.ingress.kubernetes.io/rewrite-target: /$2
  }
    # kubernetes.io/tls-acme: "true"
  host: arch.homework
  pathType: Prefix